<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <id>org.jetbrains.research.testgenie</id>
    <name>TestGenie</name>
    <vendor>ictl</vendor>


    <description><![CDATA[
    <p>TestGenie is a plugin for generating unit tests. TestGenie natively integrates <a href="https://www.evosuite.org">EvoSuite</a> into the IDE. </p>
    <ul>
        <li>Supports up to Java 11.</li>
        <li>Generates tests for different test criteria: line coverage, branch coverage, I/O diversity, exception coverage, mutation score.</li>
        <li>Generates unit tests for capturing failures.</li>
        <li>Generate tests for Java classes, method, and single lines.</li>
    </ul>

    <p>Initially implemented by <a href="https://www.ciselab.nl">CISELab</a> at <a href="https://se.ewi.tudelft.nl">SERG @ TU Delft</a>, TestGenie is currently developed and maintained by <a href="https://lp.jetbrains.com/research/ictl/">ICTL at JetBrains Research</a>.</p>
      ]]></description>

    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.java</depends>

    <extensions defaultExtensionNs="com.intellij">

        <!-- Project-level services -->
        <projectService
                serviceImplementation="org.jetbrains.research.testgenie.services.SettingsProjectService"/>
        <projectService serviceImplementation="org.jetbrains.research.testgenie.services.TestCaseDisplayService"/>

        <projectService
                serviceImplementation="org.jetbrains.research.testgenie.services.CoverageVisualisationService"/>
        <projectService
                serviceImplementation="org.jetbrains.research.testgenie.services.CoverageToolWindowDisplayService"/>
        <projectService serviceImplementation="org.jetbrains.research.testgenie.editor.Workspace"/>
        <projectService
                serviceImplementation="org.jetbrains.research.testgenie.services.TestCaseCachingService"/>
        <projectService
                serviceImplementation="org.jetbrains.research.testgenie.services.StaticInvalidationService"/>
        <projectService
                serviceImplementation="org.jetbrains.research.testgenie.services.TestGenieTelemetryService"/>
        <projectService
                serviceImplementation="org.jetbrains.research.testgenie.services.RunnerService"/>

        <toolWindow id="TestGenie" secondary="true" anchor="right"
                    factoryClass="org.jetbrains.research.testgenie.toolwindow.TestGenieToolWindowFactory"/>

        <toolWindow id="TestGenie Validator" secondary="true" anchor="bottom"
                    factoryClass="org.jetbrains.research.testgenie.tools.evosuite.validation.ValidationToolWindowFactory"/>

        <!-- Application-level services -->
        <applicationService
                serviceImplementation="org.jetbrains.research.testgenie.services.SettingsApplicationService"/>
        <applicationService
                serviceImplementation="org.jetbrains.research.testgenie.services.QuickAccessParametersService"/>

        <!-- Configurables -->
        <projectConfigurable
                parentId="tools"
                instance="org.jetbrains.research.testgenie.settings.SettingsPluginConfigurable"
                id="TestGenieSettings"
                displayName="TestGenie"/>
        <applicationConfigurable
                parentId="TestGenieSettings"
                instance="org.jetbrains.research.testgenie.settings.SettingsEvoSuiteConfigurable"
                id="TestGenieSettings.evosuite"
                displayName="EvoSuite"/>
        <applicationConfigurable
                parentId="TestGenieSettings"
                instance="org.jetbrains.research.testgenie.settings.SettingsLLMConfigurable"
                id="TestGenieSettings.llm"
                displayName="Large Language Models"/>

        <!-- Notifications -->
        <notificationGroup id="EvoSuite Execution Error"
                           displayType="BALLOON"/>
        <notificationGroup id="Test Validation Error"
                           displayType="BALLOON"/>
        <notificationGroup id="Build Execution Error"
                           displayType="BALLOON"/>
        <notificationGroup id="Validation Result"
                           displayType="BALLOON"/>
        <notificationGroup id="LLM Error"
                           displayType="BALLOON"/>

    </extensions>

    <projectListeners>
        <listener
                class="org.jetbrains.research.testgenie.listener.TestGenerationResultListenerImpl"
                topic="org.jetbrains.research.testgenie.tools.evosuite.TestGenerationResultListener"/>
        <listener
                class="org.jetbrains.research.testgenie.listener.TelemetrySubmitListenerImpl"
                topic="com.intellij.openapi.project.ProjectManagerListener"/>
    </projectListeners>

    <actions>
        <!-- TestGenie actions -->
        <group id="TestGenie.TestGenieActions" text="TestGenie" description="Actions related to TestGenie" popup="true"
               class="org.jetbrains.research.testgenie.actions.GenerateTestsActionGroup">
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
            <!-- Generate tests for class -->
            <action class="org.jetbrains.research.testgenie.actions.GenerateTestsActionClass"
                    id="TestGenie.TestGenieActions.GenerateTestsForClass"
                    text="Generate Tests For Class"
                    description="Generate tests for the selected class using TestGenie">
                <keyboard-shortcut first-keystroke="control alt shift G" second-keystroke="C" keymap="$default"/>
            </action>
            <!-- Generate tests for method -->
            <action class="org.jetbrains.research.testgenie.actions.GenerateTestsActionMethod"
                    id="TestGenie.TestGenieActions.GenerateTestsForMethod"
                    text="Generate Tests For Method"
                    description="Generate tests for the selected method using TestGenie">
                <keyboard-shortcut first-keystroke="control alt shift G" second-keystroke="M" keymap="$default"/>
            </action>
            <!-- Generate tests for lines -->
            <action class="org.jetbrains.research.testgenie.actions.GenerateTestsActionLine"
                    id="TestGenie.TestGenieActions.GenerateTestsForLine"
                    text="Generate Tests For Line"
                    description="Generate tests for the selected line using TestGenie">
                <keyboard-shortcut first-keystroke="control alt shift G" second-keystroke="L" keymap="$default"/>
            </action>


            <!-- Generate tests for class using LLM-->
            <action class="org.jetbrains.research.testgenie.actions.GenerateTestsForClassLLM"
                    id="TestGenie.TestGenieActions.GenerateTestsForClassLLM"
                    text="Generate Tests For Class (LLM)"
                    description="Generate tests for the selected class using TestGenie (LLM version)">
<!--                <keyboard-shortcut first-keystroke="control alt shift G" second-keystroke="" keymap="$default"/>-->
            </action>
        </group>
    </actions>
</idea-plugin>
